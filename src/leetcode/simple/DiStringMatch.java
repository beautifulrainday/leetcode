package leetcode.simple;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * 给定只含 "I"（增大）或 "D"（减小）的字符串 S ，令 N = S.length。
 * <p>
 * 返回 [0, 1, ..., N] 的任意排列 A 使得对于所有 i = 0, ..., N-1，都有：
 * <p>
 * 如果 S[i] == "I"，那么 A[i] < A[i+1]
 * 如果 S[i] == "D"，那么 A[i] > A[i+1]
 * <p>
 * 示例 1：
 * <p>
 * 输出："IDID"
 * 输出：[0,4,1,3,2]
 * 示例 2：
 * <p>
 * 输出："III"
 * 输出：[0,1,2,3]
 * 示例 3：
 * <p>
 * 输出："DDI"
 * 输出：[3,2,0,1]
 */
public class DiStringMatch {

    public static void main(String[] args) {
        String S = "IIDIIIIIDDIDDIDIIIDDDIDIDDDIIDIDIIIIDDDIIIDIIDIDIIIIIIDDDIIIIIIIIIDDDIIIIDDIDDIDIDIDDDIIIDIIIIDDIIIIIIDIDDDDIDIIIIDDDDIIIDIIDIDDDIDIIDIIDDDIDIDDIDDIDIDIIIIIIDIIDIDDDDDIDIDDDIDIIIIIIIIIIIDIIDDIDIIDIDIDIIIDIDDIIIDDIDIDIIIDIIIIIIIDDIIDDDIDDDDDIIDIDDDIIDDDDDIDIDIIDIDDIIDDDDIDDDIDDIIDDIDDIDDDDDDIDIIIDIDDIIDDDIIDIDIDIDIIDIIIDDDIDIIDIDIIDIIDIDDIIIDDIIDIIDIDIIDDIDIDDDIDIIDDDIDIDDDIIIDDDIDDDDIIDIDIIIDIIDIIIDDDDIDIDDDIIIIIDDDIDIDIIIDIIDIIIDIIIIIDDDIDDDIIDDIIDIIDDDIDIDDDDDIIIIIIIIIIDIIDDIIIDDDIIIDIDDIDIIDIDDDDIIDDDDDIDDIDIDIDDDDIDIDDIDIDIIIDIDIIDIDDDDDIIDDDDIIIIIDIIIIDIIDDDIIIDDIDIDDIDIIIDDDIDIIIIIIDDDDDDIDIIDIDDDDIIIDDIIIDDDDDDDDDIIIDDIIIDIIDDDIDIDIIDIIDDDDIDIDIDDIIIIIDDDDDDIDDIIIIDIDDDIDIDDDDDDIIDIIDIDIIDIIDDIDDDDDDIDDIIDIIDDDIIDIIDDDDDDIDDDDIDIDDDDIIIIIDIDDIIDDIDIIDIIIDIDDDIDIIIIIDDDDIIDDDIIDDIIIDDDIIDDIDDIIDDIIDIDDIIDIIDDDDDIDIIDDDDDDIDDIIDIIIDDIDIIIDDIDIDDIDIDIDDIDDIIIDIDDIIIDDIDDDIIDDDIDIDDIDIDDDDDDIIDIDDIIDDDDIIIIIDIDIDDDIIDIIIIDDDIIIIDDDIIIIDIDIDIIIIDDDIDDDDDIDDIDDIIDIIDIDIDIDDDDDIDIIIIIDIDDDIIIDDDDIDIDIDDDDIDDIIIIIDDIIDDIIIIDIIDDIDDIDDIDIIDDIDIIIDDIDIDDIDDDIDDIIDDDDIIDIIDIDIIDDIDDIIIDIDDDDDDDIIIDDIDIDIIIDIIDIDDDIDIIDDDIDIDIDIIIIDIDIIDIDIIIIDIDDIDIDIIDDDIIIIDDIDDIDDDDIIIDIIDDIIIIDIDIDIIDIIIIDDDIDDIIDIDIDDIIIDIIIIDDDIIDIIDDDDIDDIIIIIIIIIDDIIIDDIIDIDIIDIIIDIIIIIIDIIDDDDDIDDIDIDIIDDDIDDDIIIDDDIIIDDDDIDDIIDIDIDDDIDIIIIDIDIIIDIDDIDDDIIIDDDDIIIIDIDIIDDDDDDDIIDDDIDDDDIIIIIDDIDIDDIDDDIIIIIDDIIIDIIDIDDDDIDDIDIDIIDIDDIDIIDDDDIDIIDIIIDIDDDIIIIIDIIDDIDDIIIIDIIDDIIDIDDDDIDIIDIDIDIDIIDDIIIDIDIDIIDIIDDDIIDIDDDIIDIIDDIDIDDIIDIDIDIDDDDDIIDDIDIIIDIDDDDDIDIDDIDDDDIIDDIIIDIIDIIDDDIIIIDDDDIIDDDIIDIDIDDDDDDIDDIIIDDIDIDIDIIDDDIIDIIDDDDIIDDIDDDDDDIDDIDIDDDDIIDIDIDDDIIDIDIIIDDDDDIIIIDIDIIDIDIDDIDDIIIIIIDIIDIIDDIIDDDIIIDIDIIDDDIDIIIDDDDDIIIDDIIDIDIDDIDIIIDDIIIDIDDIIIIDDIIIDDIIDIIIIDIIIIIDIDIIDIDIDDIIDDIIIIIDIIIIDIDIDDIIDIIIIDDDIDDIIIDDDDDDIIIIDIIIDDIIDIIIIDIIDDIDIIIDDIDIDIDDDDIDIDIDIIIIDDDDIDIIDDDIIDDIIDDIIIDDDDDDIDIIDDDDIDIDDDDDDIDIDIIIDDIDDIDIIDIDDDDIIIDIIDIIIDIDDIDIIDIDIDIIIDIDDIIIDIIDDIIIDIDDIIIDIDIIDIIDIIIDDIIDIDDIDDDDDIIIDDDIIDIIDIDDDIIIIDDIDIDIIIIIIDIDDIDDIIIDDIDDDDDDIIIDDIDIDIIIIIIIDDIIIIIDDDIDDDDDDDIIIIDIIDDIIIIDIDIIDDDDDDIDIDDDDDIIDIDDDIIDIDDDDIDDIDIIDIIDDDDIIIDIIDDIDDDIIIIDIIIDIDIIIDIDDIIIIDIDDDIDDIIDDIDIDDIIIIIDDIDDDDDIDIIDIDIDIIIDDIIDIDIIIIIDIIDIIDDIDDDDIDIIIDDDDDDIIIDIDIDDDIIDDDIDIIIDDIDIDDDDDDIIDDDDDIIDIDDIDIIDDIDIDIIDDDDDDIDIDIIIIIIIIIDDDIIIIDIIDIDIDDIIIIIDIIIIIDDDDDIDDDDDDIDIIDDIIIIIIDIDIDDDIDDDIIIDDIDIIDDIIIDDDDIIDIIIIDIDDDDDDIIIIIIDIDDIIIDDDDIIDIIDDDIIDDDIIDDDIIDDDDIDIIDDDIIIDDDDDDDDIIIDDIDDIIIIIDIDDDDDIIIDIDIIIIDDDDIIDIDDDDDDDDDDIDDDIDIDDDDDDDIIDDIIIIDIIIDIDIDDIDDDDIDDIDDDIIDDIDIIIDDIDIIIIIDIDIIDDDDDDDIDIIIDDDIDDIDIDIIDDIDDDDIDDDDDDDIIIIDIIIDIDIDDIDDIDIDIDIIIIDIDDDIDDDIDIIIIDIDIIIIIIDIIDIDDIDDDIDIIIIDIIDDDDDIIDIIIDIDDDDIIIIIDDDIIIIIIDDIDIIIIDDIIIDIDIIIIDIDIDDDIIIIDDIDIDIDDIDDDIIIDDDIDIIDIDDDIIDIIDDIDDDDIDDIIDDDIIIIIIIIIIIDIDDDDIDDDDIDDDDIDIDIIIDDDIIDDIDIIDIIDIDIDIIIDIDIDDDIIDDIIIDDIIIDDIDIIDDIIIIIIIDDDDIDIIIIDDDIIIIDIDIDDDDIIDDDIDDIIDIIDDDDIDDIIDIDIDDIDIIIIDIIIIDDDIDIDDDDDIDIIIIDDIDDIIDDDDIDDIIIDDDIDIIIDIDIDDIDDDDDDIDDDIDDIDDIIDIDDDDDIDDDIDIIIIDDDIDIDDIIDIIIDDIDDDIIDIIDDIIDIDDDIDDDIIDDIIDIDIIIIDDIIDDIIIIIDDDIIDDIDIIIIDDIIIIIIDIIDIDIIDDIIDDIIIIDDIIDIIIIDDIIIIDIDDDDIIIDDIIIIIDIDIIDIIIDIIIDIIDDIDDDDDIDDDDIIDIDIIDIDIIDIDDIDDDDIIIIDDDIIIDIDIIIDIIIIDDDIIDIIDIDDDIDIIIIIDIDDIDIIDDIIDIDIIIIDDIDDDDDIIDDIDIDDIDDIIDIIDIDIDIIIDDDDIIIIIIDDDIDDDDDIDIDDIIDDDDIIIDDIIIDDDDIDDDIIDIDDIIIIDDIIIIIDIIIIIIDDIIIIDIDDIIIDDDDIDIIDDDIIDDIDDDIDIIIIIIIIIDIDIDDDDIIIIIDIDDDIIIDDIDDIDIIDDDIIIDIIDDIIIDIDIIIIDIDDDDIIDIIIDIIIIDIIDDDIDIIDIDDDIDIDDIDIIIIIIIIIDIDIIDIIDIIIDIDDDDIIIIDDIDIDIIIIIDIIIIIDIIIIIIDIIDDDIIIIDDIDDDDIDIDDDIDDIIDIDIDDIDIIIIDDDIIDDDIDDDIIIDIIDDDDIDDDDDIDIDDDIIIDIIIDDIIDIIDIIDDIDDDDIDIDIIIIIIIDIDDIDDDIDDDDDDDDDIIIDIDDDDDDIIIDIDIIIDDIIDIIIDIIIIIDIDDDDIIDIIIIIDDDDIDIDDDDIDDDDIIDIDIIIIDIIIDIIDIDDIIDIDIIDIDDDIDIIIIDDIIDDDIIIIDIIIDDDDDDIIIIIDDIIDDDIDDIIIIDIIDIIIIDIIDDDIIIDIIIIDIDDDIDDIIIIIIIIDDIIDIDIDIIIDIIIIDDDIDIIDIIDIDIIIDDDDIIIDDDIIDDDIIDIIIDDDIDDIDIIIIDIDIIDIDIIDDDDDIIDDIIIIDIIDIIDDIIIDDDIIIDDIDDDDIDIIDIIIIIIIDIDIDDIDDDDDIDIDIIIDDDDIDIDDIDIIDIIDIIDDDIDDDDDIDDIIIIDIIIDDDDIIIDIIDDDDDIDDDDDDIDDDIIDDIIIIIDIDDIDIIIDDIIIIIIDDDDIIIDDDDIDDDIDDIIDDDIDDDDDDIIIDIDIIDIDDIIDIDDDIIIIIIDDDDDIDDDDDDDIIDIIIDIIIIDDIIIDDDIDDIIIIDIDIIIDDDIDIDDIIDDDDDDDIDDIIDDIDDDIIDDIIIIDIDDIIDIIDDIIDIIDIDDIIIIIIIDDIIIIDIIDIDIDIIDIIDDIIIIIDIIIDDIIDDDIIDDDDIIDDDDIIDIDDIDDDIIDIIIDDDDDIIIIDIIIIDDIDDDIDDDDIIDDDDIDDDDIIIIDDIDIIDDDIDIDDIIDDIIDIDIDDDIDDDDDIDDDIIDDIDIDIDIDDDDDDIDDDIIDDIDIIDDDDDIIIIDIIIIIDDIDDIDDIDDDIIIDIIDDDIIIDIDIDDDDDIIIDIIDIIIDDIIDIDDDIIDIDDDIIIDIIIDIDDIIDDIDIIIIIDIDDIDDIDIDIIDDDDDDIDIIIDDIIDDIDIDIIDDIDIDIDDDDDIDDIIDIIDIIIIDDIDDIIIDDDIDDDDDIDIIIIDIDDDIDIIDDIIIIDIIIIDDIDIDDIIDDIIDIIDIDDDDDIDIIIDIDDIIDIDDDDIIIDIIIDDIIDIIDDDIDIDIIDIIDIIDIDIDIIIIIIDIDDIIIDDIDIDDIDDDDIDIDDIIIDIIIDIIDDIIIDDDIDDIIDIDDIDDDIDIIDIDIIDDDDDIDIIIIDIIIIIDDIDIDDDDDIIDDIDDIIDIIIDIDDDIDDDDDIDIIIIIDIDIDDIIDIDIDDIDIIDDDDIDDDIDIIIDDDDIIDIIIDIDIIDDDIDDIDDDIDIIIIDDIDDDIDDIDDIIIIDDDDIDDIDDDDDDDIDIIDDIDIIIDIDDIDDDDDDIDDIIIDDDDIIIIDIIIDIIIIIIIDIIDIIIDIIDIDIIIIDIDDDIIDIIIDIDDDIDIIIDIIIIDDDDDIDIIDIIDIIIDDDDDIDDDDDIDDIDDDDIIDIIIDDIDDIIDDIIDDDDDDDIDIDDDDIDIDDDDIIIDDDIIDDIDIIDIIDIDDDIIIIDIIDIDDDIDDIDDIDIIDDIDIDDIIIDIIDIIIDDDIDIIDIIIDDIDDDDIIDDIIDDDIDIDIIIDDDIIIIDDIIIIIDDDDIIIIIIIIDIDIDIDIIDIDIIDIIIIIIDIDDIDDIIIIDDDIIDDDDIIDIDDIDDIDDIDDDIDDIDIDDDIDDDIDIDDDDDIIDIIIDIDDIIDDIIIIIIIIDIIIIDDDDDDDIIIIDDIDIIDDDDIDIIDDIIIIDIDIDDIDIIDDIIIIIIIIDDIDIIDIIIDIIIDDDIIDDIDDIIDDIIIIDDIIIDDDDIDDDIDDDIIIDDDDIDDIDDDDIIIIDDIIDDIIIDIIIDIIDDIIDIIIDDIIIDIIIIIDIDIDIDDIDDIIDIIDDIDDIIDDIDIIIDIIDIIIIIDDIDDIIDIDDIIIDIDDIIDDIIDDDIIIIIDDIIDIIIIIDDIDDDIIDIDIIDIDIIDDDIIIIIDIDDIIDDDIDDDDDIIIDDIIDIDDDDIIIDIDIIIIDDDIIDIDIDIDIDIDDDDIDIDIDIIDIIIDDIDIIIIIIDDIIDDIIDIIIIDDIDIIIDDIIIDIDDIDIIIDDDDDIDIIIDDDDIIIIDIDIDDDIDIIIDIDIIIIIIDIIIIDIIDDDIDDDDDDDIDDDDDDDDDDIDIIDDDDIDDDIDIIIIDIDIIIIIDDDIDDDIIDDIIIIIIIIDDIIDDDDIDIDIIDIDDIIDIIDIDIIDIDDIIIDDDIDIIIIDIDIIDDDIIIDIIDDIIIDDDDIIDIDDDDIDDDIIIDDIDIDIDDDDIIDIIDDIDIIIDIIIIIDDIIIDIDIDIIIDDDDIDIIDIDIDDIIIDDIDDIDDDIDIDDDDDDDDDDDDDIIDDDIDDDIIDDIDDDDDIIDDIDDDIIDDDIDIIDIIIDIDIDIIDDIDIIIIDIDIIDIIIDDDDIDDIDIIDIIDDIIDDDDDDIIIDDIIIIIIIDIDDDIDIIIDIIIDIIDIDDDDIDDDIDDIDIIDDDIDDIIIDIIDIDDDDDDDIIIIDDIDIDIIDDIIDIDIIDIIDDDIIDDDDDDIIDIIDIDDIIIDDDDDDDDIIDIIDIDDDDIIIIIIDDIIDDIDIDDIDIIIDDIDDDIDDIDIIIIIIIDDDDDIDIIIIIDIDDDIIDDDDDDDIIDIIIDDIIDDIIIIDIDIDIIDDIDIIDIIIIDDDDDIIIIIIIDDIIDDIDDIIIDDDDDDDDDIIDIIIDDIDIDDDIDIIIIIDDDIIIIIDIIDDIIIDIDDIDIDIIIIIIIIDDDIIDIDDIDDIDIIIDDIIDDIIIIDDDDDDIDDDDDDIDDDDIDIIIDIIIIDDDIIDDDIDDDDDIDIIIIDIDDDIDDDIIIDIIIIIIIIIDDIIDDDIDDDIDDIDIDIIDDDIIIDIIDDDDIDIDIDDDDDDDDDDDDDDIIIDDIIIDIIIDIDDIDDIDDDDIDDIDDDIIDDDDIIDIIDDIDIIIIIDDIDIDIDDIDDIIIIDIDIIIIIDDDIDIDIIIDDIDDIIDIIIIDDIDIIDDIIDIDIIIDIDIIIIDDDDIIIIDDIIIDIDIIDIIDIDIDIDIIIDDIDDDDIIDIIDDIIIDIDDDDIIDDDIDDIDIIDDIDDDIIIIDDDIDIDDDDIDIIIIDIDIIDDIIDDDDDDDIIDDDDIDIIIDIDDDIDDIIDIIIIIIIDIDIDDIIIIDIIIDDIDIDDDDIIDIIIDIDDIIDIIDIDIDDDDDDIDDDIIDIIDIDIIIDDDIIDDDDIIIDIDIIIIDDIIIDIDIIDDDIDIDIDDIIDIIDDIDDIDDIDDIDIIIDDIIDDIIDDIDIIDIDIIIDDDDIIIIDDIIIDDDIIIIDIIIDIDIIIIDDIIDDIIIIDIDIIDIDDIIIDIDDIIIDIDDDIDIDIDIDIDIDDIIIIDIDDIDIDIDDDDIIDIIIIDDDIDDDIDIDIDIIIDDIDDDDDDIDIDDIDIIDIIDIIIDIDIDIDIIIIIIDDDDIDDIIDIDIDDIIDIDDDIIIIDIDDDDIDIDIIDDDDDDIDIDIDDDDDDIIIDDIDDIIDDIIDIIIDDIIDIDIDDIIDIIDIIIIIIDDDDDDIIDDIIDDDIDIIDDDIIIIDDDIIIIIDDDIDIIDDIDDIIDDDDDIDIDDIDIDDDDDDIDDIIDIIDDDDIIIDDIIIIDDDIIIDDDIIIIIDIDDIIIDDDIDIIIDDDDDDIDDIIIDIDIIDIIDDIDDDDDDIDDIDDIIIDIDDIIDDIDDDIIDDDIIIIDDDDIIDIIDDIIIIIIDDIDIIIDIIDDIDDIIIDIIDDDIIDIDIIDDDDIIDDDDDIDIIIDDDIIIIIIDIDDDDIDIIIDIDIDDDDDDIIDDDDDIDDIIIIDDIDDIIIIDDDDDDDIIIDIIDIIDDIDDIIIIIIIIIIDDIIDIIIIDIIIDDIIIIIIIIIDDIDIIDIDDDDIIDIDDIIDIDIIDDIIIDIDIIIIIIDDIDIIIDDIDDDIIDIIDDDDIDIIIDIDDIDDDIDIIDDIDDDDIDIDIDIDIIDIDIDDIDDIIDIDDIDIIDIDDIIIDIDIIDDIIDIDIIDIDDIDIIDDDDDIDDDDDIIDDIIIIIIDIIDDDDDIDIDIDDDIIIIDIIDDIDDIDIIIIIIIDIDIIIIDIIIIDIIDIDIIDDIDDDIIDIDIDIDDIIIDDIIDDIIDDDDIDDDIDDIIDIIIDIDIDDDIIDIIIDIDDDIIDDIIIIIIIIIDIDDIIIDIDDDIDIDIDDDDDDIDDDDDIDIDIDDIDIDIIDDIIIIDDIDDDIIDIDDIDDDIIDDIDIDDIIDIDIIDIIIIDDIDIIDIDDDDIDIIIIDIIIDIDIDDDDDDIIIDIDDIDIDDIIDIIDDDIDDIDDDIDIDIDIIIDIDDDIDDDDDIDDIDDDDIDIIDIDIIDIIDDDDIDIDDIDIIDDDDDDIIIIIDIIDIDDIIDIDDIIIDIDDIIDIDDDIDIIDIIDIDIDDDIDIIIIDIDDIIIDDDDIIDIDIDDDDIIDDDIDDIDDIIDIDDDDIDIIDIIDDIIDIDIDDIDIIDDIDIIIIIDDIIDIIDDIIIDDDDIIIIIIIIIIDIIDIDDIDDDIDDDDIIIDIDIDIIIIIIDIIDDDIIDIDIIDIDIIIIIIDDIDIIDIDDIIDDIDIDIDDDDIIDDIIDIIDDIIIDIDDIIDDIIDIIIIIDIIDIIIDDDDDDIDDIIIIIDDDDIDIIDDDIIDDIDIDDDDDDIDDDIIDDIIIDIIIDDIDIIDDDIIIIIIIIIDDIDDIDDDDIIDDDDDIIDIIDIIIDIIIIIDIIDDIIDDDIIDIIDIDIIDDDDIDDIDIDDIDDIDIDIIDIDIIDDIIDIDDIIDDDIIIDDIDDIIIIIDDDIDIDIDDIIDIIDIDIDIDIIDIDIDIDDIDDDDDDDIIDIDIDIDIIDDDDDIIDDDIIIIIIIIIDIDDDIDDIDIDIDIDIDIIDIIDDIIDIIDIDIDDIIIDDIDDDIDIIDDIDDIIDDIDDIDIDDIDDDDIIDIDIDIIDIIDIDIIIDDIDDIIIIDDIIIIDIDDDDIIIDDIDIIDIDIDIIIDIIDIIIIIDIDIIIDIIIDDDIDIIDDIDIIIIIIDIIIIDIDDIIIDDIIIIIIDDIIDIIIDIDIDDIDIDDDIDIDDIIIIDDDIIDDIIIDIDIDIIIDIIIDDDIIIIDIDIIIDDIIIDIDDDIDIDDIIIIDDIIIDDIDIIIDDIDDIIDDDDIDIIDIIDIDDIDDIIDDIIIIDDDIDIDDIDIDDDDDIDDIDIIDDDIIDIDDIDIDDDDIDIIIIIIDIIIDIDIIIIDIIIDIDIDDDDDIDIDDIDDDDIDDDDDDIDIIIIDIIIIIDIIDDIDDDIDDDDIIDDIIIDIDIDDDIIDDDDDDDDDDIIDIIDDIDDDDDDIIIDIIDDIIDIIIDIIDDDDDDIIIDDIIIDDIIDIDIDDDIDIIDDIIDIIDDDDIDDDIDDIIIIDDDIIIDIDDIIIDDIIIDIIDIDDIDIIDIIDIDDDDIDDDDIIDDIDDDDDDDIIDIIDDDIDIIIDDIIDIDDIIIIIDIDDIDIDDDDIIDDDIIIIDDIDIDDIIIDDIDDIDIIIDDIIDDIDIIIDDDIIDDDDIIIDDDDDIIDDIIDIDIIDDIDDDDDDIIIDDIIIIIDIDDDDIIIIIIIDIDDIIDIDDIIDIIDDDDIIIIDIDDIIIDDDIDIIDIDDDIIIDIIIIDDDDIDDDIDDDDDDIDIIDDIDDIIIDDDIIDIIDIDDIIIIDIDIIIIIIIIDDDIIDDIDIIIDDIDIDIDIIDIIIIDIDDIDIIIIDIIIDDDDIDIDIIDIIDIIIDIDIIIIDDIDIDIIDDDIIIDIIIDDDDIDIIIIDIDDDIDIDDDIIIDIIIIDDIDIIIIDDIIIIIDDIIDDDIDDIIDDDIDIDDDDIDDIIDDDDDIIDIDDDIDDIDIIDIDDDIDIDIDDIIIIDIIIIDIIDDIDDIIDIDDDDIDDDIDIDIIDIIDDIIDIDIDDIIDIDDDDDIIIIIDDDDDIIDDDIDIIIDDDDDIIIIIIDDDIIIIIIDDIIIIDIDIIDIDDIIDDDDDIIDIIIDDIIIDDIDDDDIDDDIIDDDIIIIDDIDDDDDIDDIDIIDDDDDDIIIDDIDIDIIIIDDIIIDIIDIDIIDDIIDIIIDDIIIIDIDIIIIIDDIIDIIIDIIDDDIIDDDDIIIDIIDDIIDDIDDIDDDDIIIDDDIDDIDDIIDDIIIIDIDIIDIIDIDDDDDIIDIDDDDDDIDDIIIIIIDIDIDDDDDDDIIDDIIIDIDDDIDDDDIDDIIIDDIDDDIIIDIIIDDDIDDDIDDIDDIDIDIIIIDDIDIID";
        //String S = "IIDIIIIIDDIDDIDI";
        System.out.print(Arrays.toString(diStringMatch(S)));
    }

    public static int[] diStringMatch(String S) {
        List<Integer> integers = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        for (int i = 0; i < S.length() + 1; i++) {
            integers.add(i);
        }

        for (int i = 0; i < S.length(); i++) {
            String str = S.charAt(i) + "";
            if (str.equalsIgnoreCase("D")) {
                /*for(int j=0;j<integers.size()-1;j++){
                    for(int k=0;k<integers.size()-1-j;k++){
                        if(integers.get(k)<integers.get(k+1)){
                            int t = integers.get(k);
                            integers.set(k,integers.get(k+1));
                            integers.set(k+1,t);
                        }
                    }
                }*/
                int max = Collections.max(integers);
                temp.add(max);
                integers.remove(integers.indexOf(max));
            } else {
                /*for(int j=0;j<integers.size()-1;j++){
                    for(int k=0;k<integers.size()-1-j;k++){
                        if(integers.get(k)>integers.get(k+1)){
                            int t = integers.get(k);
                            integers.set(k,integers.get(k+1));
                            integers.set(k+1,t);
                        }
                    }
                }*/
                int min = Collections.min(integers);
                temp.add(min);
                integers.remove(integers.indexOf(min));
            }
        }
        temp.add(integers.get(0));
        int[] result = new int[temp.size()];
        for (int i = 0; i < temp.size(); i++) {
            result[i] = temp.get(i);
        }
        return result;
    }
}
